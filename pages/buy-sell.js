import Head from "next/head";
import { Inter } from "next/font/google";
import styled from 'styled-components'
const inter = Inter({ subsets: ["latin"] });
import Footer from "../components/FooterFigma"
import  Navbar from "../components/NavbarFigma";
import { Tabs, Tab } from "../components/TabCard";
import { useState } from "react"; // Adjust the import path according to your file structure
import HowtoCrypto from "@/components/HowtoCrypto";

const ParentContainer= styled.main`
  *{
    padding:0;
    //width: 100vw;
    flex-direction: row;
  }
`;
const HorizontalContainer = styled.div`
  display: flex;
  justify-content: center; /* Centers children horizontally */
  align-items: center; /* Aligns children vertically in the center */
  height: 100px; /* Example height */
`;

const StyledSelect = styled.select`
  padding: 8px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 4px;
`;


export default function Home() {

    const [amountSpend, setAmountSpend] = useState('');
    const [amountReceive, setAmountReceive] = useState('');
    const [spendPrice, setSpendPrice] = useState(10);
    const [receivePrice, setReceivePrice] = useState(10);

    const handleChangeAmountSpend = (event) => {
        const newAmountSpend = event.target.value.replace(/[^0-9]/g, '');
        setAmountSpend(newAmountSpend);
        setAmountReceive(newAmountSpend ? String((newAmountSpend * spendPrice) / receivePrice) : '');
    };

    const handleChangeAmountReceive = (event) => {
        const newAmountReceive = event.target.value.replace(/[^0-9]/g, '');
        setAmountReceive(newAmountReceive);
        setAmountSpend(newAmountReceive ? String((newAmountReceive * receivePrice) / spendPrice) : '');
    };

    const handleSpendPriceChange = (event) => {
        const newSpendPrice = Number(event.target.value);
        setSpendPrice(newSpendPrice);
        setAmountReceive(amountSpend ? String((amountSpend * newSpendPrice) / receivePrice) : '');
    };

    const handleReceivePriceChange = (event) => {
        const newReceivePrice = Number(event.target.value);
        setReceivePrice(newReceivePrice);
        setAmountReceive(amountReceive ? String((amountSpend * spendPrice) / newReceivePrice) : '');
    };

    return (
        <>
            <Head>
                <title>StockBlock Home</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Navbar/>
            <Tabs>
                <Tab label="Buy">
                    <TradeContainer>
                        <SpendContainer>
                            <h3>Spend</h3>
                            <HorizontalContainer>
                                <StyledInput
                                    type="text"
                                    value={amountSpend}
                                    onChange={handleChangeAmountSpend}
                                    placeholder="0.00"
                                />
                                <StyledSelect value={spendPrice} onChange={handleSpendPriceChange}>
                                    <option value="1">1</option>
                                    <option value="5">5</option>
                                    <option value="10">10</option>
                                    <option value="20">20</option>
                                </StyledSelect>
                            </HorizontalContainer>

                        </SpendContainer>
                        <SpendContainer>
                            <h3>Receive</h3>
                            <HorizontalContainer>
                                <StyledInput
                                    type="text"
                                    value={amountReceive}
                                    onChange={handleChangeAmountReceive}
                                    placeholder="0.00"
                                />
                                <StyledSelect value={receivePrice} onChange={handleReceivePriceChange}>
                                    <option value="1">1</option>
                                    <option value="5">5</option>
                                    <option value="10">10</option>
                                    <option value="20">20</option>
                                </StyledSelect>
                            </HorizontalContainer>
                        </SpendContainer>
                        <DownloadButton>Connect Your Wallet</DownloadButton>
                    </TradeContainer>
                </Tab>
                <Tab label="Sell">
                    <TradeContainer>
                        <SpendContainer>
                            <h3>Spend</h3>
                            <HorizontalContainer>
                                <StyledInput
                                    type="text"
                                    value={amountSpend}
                                    onChange={handleChangeAmountSpend}
                                    placeholder="0.00"
                                />
                                <StyledSelect value={spendPrice} onChange={handleSpendPriceChange}>
                                    <option value="1">1</option>
                                    <option value="5">5</option>
                                    <option value="10">10</option>
                                    <option value="20">20</option>
                                </StyledSelect>
                            </HorizontalContainer>
                        </SpendContainer>
                        <SpendContainer>
                            <h3>Receive</h3>
                            <HorizontalContainer>
                                <StyledInput
                                    type="text"
                                    value={amountReceive}
                                    onChange={handleChangeAmountReceive}
                                    placeholder="0.00"
                                />
                                <StyledSelect value={receivePrice} onChange={handleReceivePriceChange}>
                                    <option value="1">1</option>
                                    <option value="5">5</option>
                                    <option value="10">10</option>
                                    <option value="20">20</option>
                                </StyledSelect>
                            </HorizontalContainer>
                        </SpendContainer>
                        <DownloadButton>Connect Your Wallet</DownloadButton>
                    </TradeContainer>
                </Tab>
            </Tabs>
            <Container>
                <HowtoCrypto/>
            </Container>
            <Footer/>
        </>
    );

}



const TradeContainer = styled.div`
  display: flex;
  flex-direction: column; // Stacks children vertically
  gap: 10px; // Adds space between the two input fields
`;

// Styled component for individual inputs, if additional styling is needed
const StyledInput = styled.input`
  padding: 8px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 4px;
`;

const SpendContainer = styled.div`
`;

const Container = styled.div`
  align-self: center;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  margin-bottom: 50px;
  width: 100%;
`;

const Icon = styled.img`
   height: 30px;
   width: 30px;
 `;

const DownloadButton = styled.button`
  background-color: #117FC6;
  color: white;
  border-radius: 80px;
  border: none;
  cursor: pointer;
  font: 700 16px/100% DM Sans, sans-serif;
  justify-content: center;
  letter-spacing: 1.6px;
  margin: auto 0;
  padding: 27px 32px;
  text-align: center;
  transition: background-color 0.3s ease, transform 0.3s ease;

  &:hover {
    background-color: #0e6ba8; /* Darker shade for the hover state */
    transform: scale(1.05); /* Slightly increase the scale */
  }

  @media (max-width: 991px) {
    padding: 0 20px;
  }
`;