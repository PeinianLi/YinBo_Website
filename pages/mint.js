import Head from "next/head";
import { Inter } from "next/font/google";
import styled from 'styled-components'
const inter = Inter({ subsets: ["latin"] });
import Footer from "../components/FooterFigma"
import  Navbar from "../components/NavbarFigma";
import { useState } from "react"; // Adjust the import path according to your file structure
import HowtoCrypto from "@/components/HowtoCrypto";
import { useContract, useAddress, useSigner } from "@thirdweb-dev/react";
import ReflectTestTokenABI from '@/contracts/abi/ReflectTestTokenABI.json'
import Web3 from "web3";
import contractABI from "@/contracts/abi/chainlinktest.json";
import {ethers} from "ethers";


// if (typeof window !== 'undefined') {
//     const web3 = new Web3(window.ethereum);
//     const contractAddress = "0xD36e29ab0a1928DfDcD7f930fde92d833873bC5b";
//     const contract = new web3.eth.Contract(contractABI, contractAddress);
//     contract.methods.totalSupply().call()
//         .then(value => console.log(`The value is ${value}`))
//         .catch(console.error);
// }
const contractAddress = '0xD36e29ab0a1928DfDcD7f930fde92d833873bC5b'

export default function Mint() {
    // if (typeof window !== 'undefined') {
    //     const contractAddress = '0xD36e29ab0a1928DfDcD7f930fde92d833873bC5b'
    //     const provider = new ethers.providers.Web3Provider(window.ethereum)
    //     const contract = new ethers.Contract(contractAddress, ReflectTestTokenABI, provider.getSigner())
    //     async function getTotalSupply() {
    //         const total = await contract.totalSupply()
    //         return total.toString()
    //     }
    //     console.log(getTotalSupply())
    // }

    const contract = new ethers.Contract(contractAddress, ReflectTestTokenABI)
    console.log(contract.getTotalSupply())


    return (
        <>
            <Head>
                <title>StockBlock Home</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Navbar/>
            <h1>Feel free to mint ReflectTestToken</h1>
            <h1>

            </h1>
            <Container>
                <HowtoCrypto/>
            </Container>
            <Footer/>
        </>
    );

}



const TradeContainer = styled.div`
  display: flex;
  flex-direction: column; // Stacks children vertically
  gap: 10px; // Adds space between the two input fields
`;

// Styled component for individual inputs, if additional styling is needed
const StyledInput = styled.input`
  padding: 8px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 4px;
`;

const SpendContainer = styled.div`
`;

const Container = styled.div`
  align-self: center;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  margin-bottom: 50px;
  width: 100%;
`;

const Icon = styled.img`
   height: 30px;
   width: 30px;
 `;

const DownloadButton = styled.button`
  background-color: #117FC6;
  color: white;
  border-radius: 80px;
  border: none;
  cursor: pointer;
  font: 700 16px/100% DM Sans, sans-serif;
  justify-content: center;
  letter-spacing: 1.6px;
  margin: auto 0;
  padding: 27px 32px;
  text-align: center;
  transition: background-color 0.3s ease, transform 0.3s ease;

  &:hover {
    background-color: #0e6ba8; /* Darker shade for the hover state */
    transform: scale(1.05); /* Slightly increase the scale */
  }

  @media (max-width: 991px) {
    padding: 0 20px;
  }
`;

const ParentContainer= styled.main`
  *{
    padding:0;
    //width: 100vw;
    flex-direction: row;
  }
`;
const HorizontalContainer = styled.div`
  display: flex;
  justify-content: center; /* Centers children horizontally */
  align-items: center; /* Aligns children vertically in the center */
  height: 100px; /* Example height */
`;
const StyledSelect = styled.select`
  padding: 8px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 4px;
`;
